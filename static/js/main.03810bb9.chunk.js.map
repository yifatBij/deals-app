{"version":3,"sources":["logo.svg","services/dealService.js","pages/AllDeals/AllDeals.jsx","pages/AllDeals/AllDealsContainer.js","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","baseURL","dealService","createNewDeal","data","post","getDeals","get","transformResponse","deals","JSON","parse","body","tableHeaders","Object","keys","AllDeals","columnClass","key","val","includes","isNaN","renderRowData","deal","index","map","className","properties","target","h","i","AllDealsContainer","useState","isLoading","setLoading","setDeals","setTableHeaders","useEffect","a","reponse","App","src","logo","alt","href","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAAe,G,MAAA,IAA0B,kC,uDCIzCA,IAAMC,SAASC,QAAf,UAFiB,wCAEjB,OADqB,kDACrB,UAGA,IAeeC,EAfK,CACnBC,cAAe,SAACC,GACf,OAAOL,IAAMM,KAAK,cAAeD,IAGlCE,SAAU,WACT,OAAOP,IAAMQ,IAAI,cAAe,CAC/BC,kBAAkB,CAAC,SAACJ,GACnB,IAAMK,EAAQC,KAAKC,MAAMP,GAAMQ,KAE/B,MAAO,CAACC,aADaC,OAAOC,KAAKN,EAAM,IACjBA,e,iBCwBXO,G,MApCE,SAAC,GAA0B,IAiBhBP,EAjBTI,EAAwB,EAAxBA,aAAcT,EAAU,EAAVA,KAExBa,EAAc,SAACC,EAAKC,GACzB,OAAGD,EAAIE,SAAS,WACP,UAGLC,MAAMF,IAASD,EAAIE,SAAS,gBAAhC,EACS,UAKJE,EAAgB,SAACC,EAAMC,GAC5B,OAAOX,EAAaY,KAAI,SAACP,GAAD,OAAS,oBAA2BQ,UAAWT,EAAYC,EAAKK,EAAKL,IAA5D,SAAmE,cAAC,IAAD,CAASS,WAAY,CAACC,OAAQ,UAA9B,SAA2CL,EAAKL,MAAnH,UAAYA,GAAZ,OAAkBM,QAUnD,OACQ,kCACE,gCACE,6BAAKX,EAAaY,KAAI,SAACI,EAAGC,GAAJ,OAAU,6BAAaD,GAAJC,UAE3C,iCAZcrB,EAaML,EAZvBK,EAAMgB,KAAI,SAACF,EAAMC,GACtB,OAAO,6BAAiBF,EAAcC,EAAMC,IAA5BA,cCKNO,EAzBU,WAAO,IAAD,EACEC,oBAAS,GADX,mBACvBC,EADuB,KACZC,EADY,OAEJF,mBAAS,IAFL,mBAEvBvB,EAFuB,KAEhB0B,EAFgB,OAGUH,mBAAS,IAHnB,mBAGvBnB,EAHuB,KAGTuB,EAHS,KAiB7B,OAZAC,qBAAU,WAAM,4CACd,kCAAAC,EAAA,sEAC0BpC,EAAYI,WADtC,OACUiC,EADV,SAEmCA,EAAQnC,KAA/BK,EAFZ,EAEYA,MAAOI,EAFnB,EAEmBA,aACfqB,GAAW,GACXC,EAAS1B,GACT2B,EAAgBvB,GALpB,4CADc,uBAAC,WAAD,wBASdP,KACA,IAEC2B,EACO,wBAGF,cAAC,EAAD,CAAUpB,aAAcA,EAAcT,KAAMK,KCCxC+B,MAtBf,WACE,OACE,sBAAKd,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKe,IAAKC,EAAMhB,UAAU,WAAWiB,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEjB,UAAU,WACVkB,KAAK,sBACLhB,OAAO,SACPiB,IAAI,sBAJN,4BASF,cAAC,EAAD,QCTSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.03810bb9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from 'axios'\n\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\nconst REIGO_ORIGIN = 'https://reigo-staging-dot-reigo-inv.appspot.com'\naxios.defaults.baseURL = `${proxyurl}${REIGO_ORIGIN}/reigo`;\n\n\nconst dealService = {\n\tcreateNewDeal: (data) => {\n\t\treturn axios.post('dealsInputs', data)\n\t},\n\n\tgetDeals: () => { \n\t\treturn axios.get('dealsInputs', {\n\t\t\ttransformResponse:[(data)=> {\n\t\t\t\tconst deals = JSON.parse(data).body\n\t\t\t\tconst tableHeaders = Object.keys(deals[0])\n\t\t\t\treturn {tableHeaders, deals};\n\t\t}]})\n\t}\n}\n\nexport default dealService","import React, { useState} from 'react';\nimport Linkify from 'react-linkify';\nimport './AllDeals.css'\n\n\nconst AllDeals = ({tableHeaders, data}) => {\n\n   const columnClass = (key, val) => {\n    if(key.includes('Address')){\n      return 'address';\n    }\n\n    if(!isNaN(val) && !key.includes('zipCode')){\n      return 'number';\n    }\n   }\n\n\n   const renderRowData = (deal, index) => {\n    return tableHeaders.map((key) => <td key={`${key}${index}`} className={columnClass(key, deal[key])}><Linkify properties={{target: '_blank'}}>{ deal[key] }</Linkify></td>)\n   }\n\n   const renderTableData = (deals)=>{\n    return deals.map((deal, index) => {\n      return <tr key={index}>{renderRowData(deal, index)}</tr>\n      })\n    }\n\n\n    return (\n            <table>\n              <thead>\n                <tr>{tableHeaders.map((h, i) => <th key={i}>{h}</th>)}</tr>\n              </thead>\n              <tbody>\n                { renderTableData(data) }\n              </tbody>\n            </table>\n    )\n}\n\nexport default AllDeals;","import React, { useState, useEffect } from 'react';\nimport dealService from '../../services/dealService.js';\nimport AllDeals from './AllDeals'\n\nconst AllDealsContainer = () => {\n  const [isLoading, setLoading] = useState(true)\n  const [deals, setDeals] = useState([])\n  const [tableHeaders, setTableHeaders] = useState([])\n\n   useEffect(() => {\n     async function getDeals() {\n         const reponse = await dealService.getDeals();\n         const { deals, tableHeaders} = reponse.data\n         setLoading(false)\n         setDeals(deals);\n         setTableHeaders(tableHeaders)\n\n     }\n     getDeals();\n  }, [])\n\n   if(isLoading){\n      return 'AllDeals - loading...'\n    }else{\n      \n    return <AllDeals tableHeaders={tableHeaders} data={deals}/>\n  }\n }\n\n export default AllDealsContainer;","import logo from './logo.svg';\nimport './App.css';\nimport AllDeals from './pages/AllDeals'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      <AllDeals/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}