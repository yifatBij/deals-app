{"version":3,"sources":["services/dealService.js","pages/AllDeals/AllDeals.jsx","pages/AllDeals/AllDealsContainer.js","pages/consts.js","pages/NewDeal/NewDeal.jsx","main.js","Navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","baseURL","dealService","createNewDeal","data","post","getDeals","get","transformResponse","deals","JSON","parse","body","tableHeaders","Object","keys","AllDeals","columnClass","key","val","includes","isNaN","renderRowData","deal","index","map","className","properties","target","h","i","AllDealsContainer","useState","isLoading","setLoading","setDeals","setTableHeaders","useEffect","a","reponse","NEW_DEAL_SAMPLE","NewDeal","disabled","setDisabled","uploadData","setUploadData","result","setResult","submitText","setSubmitText","placeholder","onChange","error","jsObject","locale","height","onClick","then","response","Main","exact","path","component","Navbar","to","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18aeaf35.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\";\nconst REIGO_ORIGIN = 'https://reigo-staging-dot-reigo-inv.appspot.com'\naxios.defaults.baseURL = `${proxyurl}${REIGO_ORIGIN}/reigo`;\n\n\nconst dealService = {\n\tcreateNewDeal: (data) => {\n\t\treturn axios.post('dealsInputs', data)\n\t},\n\n\tgetDeals: () => { \n\t\treturn axios.get('dealsInputs', {\n\t\t\ttransformResponse:[(data)=> {\n\t\t\t\tconst deals = JSON.parse(data).body\n\t\t\t\tconst tableHeaders = Object.keys(deals[0])\n\t\t\t\treturn {tableHeaders, deals};\n\t\t}]})\n\t}\n}\n\nexport default dealService","import React, { useState} from 'react';\nimport Linkify from 'react-linkify';\nimport './AllDeals.css'\n\n\nconst AllDeals = ({tableHeaders, data}) => {\n\n   const columnClass = (key, val) => {\n    if(key.includes('Address')){\n      return 'address';\n    }\n\n    if(!isNaN(val) && !key.includes('zipCode')){\n      return 'number';\n    }\n   }\n\n\n   const renderRowData = (deal, index) => {\n    return tableHeaders.map((key) => <td key={`${key}${index}`} className={columnClass(key, deal[key])}><Linkify properties={{target: '_blank'}}>{ deal[key] }</Linkify></td>)\n   }\n\n   const renderTableData = (deals)=>{\n    return deals.map((deal, index) => {\n      return <tr key={index}>{renderRowData(deal, index)}</tr>\n      })\n    }\n\n\n    return (\n            <table>\n              <thead>\n                <tr>{tableHeaders.map((h, i) => <th key={i}>{h}</th>)}</tr>\n              </thead>\n              <tbody>\n                { renderTableData(data) }\n              </tbody>\n            </table>\n    )\n}\n\nexport default AllDeals;","import React, { useState, useEffect } from 'react';\nimport dealService from '../../services/dealService.js';\nimport AllDeals from './AllDeals'\n\nconst AllDealsContainer = () => {\n  const [isLoading, setLoading] = useState(true)\n  const [deals, setDeals] = useState([])\n  const [tableHeaders, setTableHeaders] = useState([])\n\n   useEffect(() => {\n     async function getDeals() {\n         const reponse = await dealService.getDeals();\n         const { deals, tableHeaders} = reponse.data\n         setLoading(false)\n         setDeals(deals);\n         setTableHeaders(tableHeaders)\n\n     }\n     getDeals();\n  }, [])\n\n   if(isLoading){\n      return 'AllDeals - loading...'\n    }else{\n      \n    return <AllDeals tableHeaders={tableHeaders} data={deals}/>\n  }\n }\n\n export default AllDealsContainer;","export const NEW_DEAL_SAMPLE = {\n  \"loanOriginatedDate\": \"yyyy-MM-dd\",\n  \"platformName\": \"string\",\n  \"externalId\": \"string\"\n}","import React, { useState } from 'react';\nimport JSONInput from 'react-json-editor-ajrm';\nimport locale    from 'react-json-editor-ajrm/locale/en';\nimport JSONPretty from 'react-json-pretty';\n\nimport dealService from '../../services/dealService.js';\nimport { NEW_DEAL_SAMPLE } from '../consts';\n\nimport 'react-json-pretty/themes/monikai.css';\nimport './NewDeal.css';\n\n\nconst NewDeal = () => {\n  const [disabled, setDisabled] = useState(true);\n  const [uploadData, setUploadData] = useState();\n  const [result, setResult] = useState('');\n  const [submitText, setSubmitText] = useState('Lets Create');\n\n  const jsonChanged = ({error, jsObject}) => { \n    setDisabled(!!error)\n    setUploadData(jsObject)\n   }\n\n   const postData = () => {\n    setDisabled(true);\n    setResult();\n    setSubmitText('processing...')\n      dealService.createNewDeal(uploadData).then(response => {\n        setResult(response)\n        setSubmitText('Lets Create')\n      }, (error) => {\n        setResult(error)\n        setSubmitText('Lets Create')\n})\n   }\n\n  return (\n    <div className=\"rowC\">\n        <JSONInput \n          placeholder = { NEW_DEAL_SAMPLE }\n          onChange    = { jsonChanged }\n          locale      = { locale }\n          height      = '550px'\n        />\n    <button className=\"submit\" disabled = { disabled } onClick = { postData }> {submitText}</button>\n    <JSONPretty data={result}/>\n    </div>\n  );\n}\n\nexport default NewDeal;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport AllDeals from './pages/AllDeals';\nimport NewDeal from './pages/NewDeal';\n\nconst Main = () => {\n  return (\n    <Switch> {/* The Switch decides which component to show based on the current URL.*/}\n      <Route exact path={[\"/allDeals\", \"/demo-app\"]} component={AllDeals}></Route>\n      <Route exact path='/newDeal' component={NewDeal}></Route>\n    </Switch>\n  );\n}\n\nexport default Main;","import {NavLink} from 'react-router-dom';\nconst Navbar = () => {\n    return(\n        <nav className=\"navBar\">\n            <ul>\n                <li><NavLink exact to=\"/allDeals\">All Deals</NavLink></li>\n                <li><NavLink to=\"/newDeal\">Add Deal</NavLink></li>\n            </ul>\n        </nav>\n    );\n}\nexport default Navbar;","import './App.css';\nimport Main from './main'\nimport Navbar from './Navbar'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}