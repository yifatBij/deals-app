{"version":3,"sources":["../node_modules/react-linkify/dist/Linkify.js","../node_modules/linkify-it/index.js","../node_modules/linkify-it/lib/re.js","../node_modules/uc.micro/properties/Any/regex.js","../node_modules/uc.micro/categories/Cc/regex.js","../node_modules/uc.micro/categories/Z/regex.js","../node_modules/uc.micro/categories/P/regex.js"],"names":["Object","defineProperty","exports","value","linkify","undefined","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react2","_interopRequireDefault","require","_linkifyIt2","_tlds2","_propTypes2","obj","__esModule","default","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","tlds","Linkify","_React$Component","_ref","_temp","_this","this","_len","arguments","args","Array","_key","__proto__","getPrototypeOf","apply","concat","parseCounter","subClass","superClass","create","constructor","setPrototypeOf","_inherits","string","match","_this2","elements","matches","getMatches","lastIndex","forEach","idx","index","push","substring","href","url","properties","val","MATCH","createElement","component","text","children","_this3","parsed","parseString","isValidElement","type","cloneElement","parse","map","child","parsedChildren","className","Component","propTypes","any","object","urlRegex","emailRegex","defaultProps","assign","sources","slice","source","keys","_class","toString","isFunction","escapeRE","str","replace","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","pos","tail","re","http","RegExp","src_auth","src_host_port_strict","src_path","test","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_default","split","compile","__opts__","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","src_xn","join","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","name","Error","__compiled__","__schemas__","compiled","link","isRegExp","createValidator","normalize","isString","alias","slist","filter","schema_test","src_ZPCc","schema_search","pretest","__index__","__text_cache__","resetScanCache","Match","shift","start","end","__last_index__","schema","__schema__","toLowerCase","raw","createMatch","LinkifyIt","schemas","options","reduce","acc","k","hasOwnProperty","add","definition","set","m","ml","me","len","next","tld_pos","exec","testSchemaAt","search","indexOf","result","list","keepOld","isArray","sort","el","arr","reverse","module","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict"],"mappings":"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","file":"static/js/5.c57b2bd7.chunk.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.linkify = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _linkifyIt = require('linkify-it');\n\nvar _linkifyIt2 = _interopRequireDefault(_linkifyIt);\n\nvar _tlds = require('tlds');\n\nvar _tlds2 = _interopRequireDefault(_tlds);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar linkify = exports.linkify = new _linkifyIt2.default();\nlinkify.tlds(_tlds2.default);\n\nvar Linkify = function (_React$Component) {\n  _inherits(Linkify, _React$Component);\n\n  function Linkify() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Linkify);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Linkify.__proto__ || Object.getPrototypeOf(Linkify)).call.apply(_ref, [this].concat(args))), _this), _this.parseCounter = 0, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(Linkify, [{\n    key: 'getMatches',\n    value: function getMatches(string) {\n      return linkify.match(string);\n    }\n  }, {\n    key: 'parseString',\n    value: function parseString(string) {\n      var _this2 = this;\n\n      var elements = [];\n      if (string === '') {\n        return elements;\n      }\n\n      var matches = this.getMatches(string);\n      if (!matches) {\n        return string;\n      }\n\n      var lastIndex = 0;\n      matches.forEach(function (match, idx) {\n        // Push the preceding text if there is any\n        if (match.index > lastIndex) {\n          elements.push(string.substring(lastIndex, match.index));\n        }\n        // Shallow update values that specified the match\n        var props = { href: match.url, key: 'parse' + _this2.parseCounter + 'match' + idx };\n        for (var key in _this2.props.properties) {\n          var val = _this2.props.properties[key];\n          if (val === Linkify.MATCH) {\n            val = match.url;\n          }\n\n          props[key] = val;\n        }\n        elements.push(_react2.default.createElement(_this2.props.component, props, match.text));\n        lastIndex = match.lastIndex;\n      });\n\n      if (lastIndex < string.length) {\n        elements.push(string.substring(lastIndex));\n      }\n\n      return elements.length === 1 ? elements[0] : elements;\n    }\n  }, {\n    key: 'parse',\n    value: function parse(children) {\n      var _this3 = this;\n\n      var parsed = children;\n\n      if (typeof children === 'string') {\n        parsed = this.parseString(children);\n      } else if (_react2.default.isValidElement(children) && children.type !== 'a' && children.type !== 'button') {\n        parsed = _react2.default.cloneElement(children, { key: 'parse' + ++this.parseCounter }, this.parse(children.props.children));\n      } else if (children instanceof Array) {\n        parsed = children.map(function (child) {\n          return _this3.parse(child);\n        });\n      }\n\n      return parsed;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      this.parseCounter = 0;\n      var parsedChildren = this.parse(this.props.children);\n\n      return _react2.default.createElement(\n        'span',\n        { className: this.props.className },\n        parsedChildren\n      );\n    }\n  }]);\n\n  return Linkify;\n}(_react2.default.Component);\n\nLinkify.MATCH = 'LINKIFY_MATCH';\nLinkify.propTypes = {\n  className: _propTypes2.default.string,\n  component: _propTypes2.default.any,\n  properties: _propTypes2.default.object,\n  urlRegex: _propTypes2.default.object,\n  emailRegex: _propTypes2.default.object\n};\nLinkify.defaultProps = {\n  className: 'Linkify',\n  component: 'a',\n  properties: {}\n};\nexports.default = Linkify;\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,4}[a-zA-Z0-9%/]|' + // github has ... in commit range links,\n                                     // google has .... in links (issue #66)\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          '\\\\,(?!' + re.src_ZCc + ').|' +      // allow `,,,` in paths\n          '\\\\!(?!' + re.src_ZCc + '|[!]).|' +\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/"],"sourceRoot":""}