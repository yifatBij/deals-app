{"version":3,"sources":["pages/AllDeals/AllDeals.jsx","pages/AllDeals/AllDealsContainer.js"],"names":["AllDeals","deals","tableHeaders","data","columnClass","key","val","includes","isNaN","renderRowData","deal","index","map","className","properties","target","h","i","AllDealsContainer","useState","isLoading","setLoading","setDeals","error","setError","setTableHeaders","useEffect","dealService","getDeals","then","toString"],"mappings":"kOAwCeA,G,MApCE,SAAC,GAA0B,IAiBhBC,EAjBTC,EAAwB,EAAxBA,aAAcC,EAAU,EAAVA,KAExBC,EAAc,SAACC,EAAKC,GACzB,OAAGD,EAAIE,SAAS,WACP,UAGLC,MAAMF,IAASD,EAAIE,SAAS,gBAAhC,EACS,UAKJE,EAAgB,SAACC,EAAMC,GAC5B,OAAOT,EAAaU,KAAI,SAACP,GAAD,OAAS,oBAA2BQ,UAAWT,EAAYC,EAAKK,EAAKL,IAA5D,SAAmE,cAAC,IAAD,CAASS,WAAY,CAACC,OAAQ,UAA9B,SAA2CL,EAAKL,MAAnH,UAAYA,GAAZ,OAAkBM,QAUnD,OACQ,kCACE,gCACE,6BAAKT,EAAaU,KAAI,SAACI,EAAGC,GAAJ,OAAU,6BAAaD,GAAJC,UAE3C,iCAZchB,EAaME,EAZvBF,EAAMW,KAAI,SAACF,EAAMC,GACtB,OAAO,6BAAiBF,EAAcC,EAAMC,IAA5BA,cCQNO,EA3BU,WAAO,IAAD,EACEC,oBAAS,GADX,mBACvBC,EADuB,KACZC,EADY,OAEJF,mBAAS,IAFL,mBAEvBlB,EAFuB,KAEhBqB,EAFgB,OAGJH,qBAHI,mBAGvBI,EAHuB,KAGhBC,EAHgB,OAIUL,mBAAS,IAJnB,mBAIvBjB,EAJuB,KAITuB,EAJS,KAkB7B,OAZAC,qBAAU,WACJC,IAAYC,WAAWC,MAAK,YAAY,IAAV1B,EAAS,EAATA,KACrBF,EAAuBE,EAAvBF,MAAOC,EAAgBC,EAAhBD,aACfmB,GAAW,GACXC,EAASrB,GACTwB,EAAgBvB,MACd,SAACqB,GACHF,GAAW,GACXG,EAASD,EAAMO,iBAEjB,IAEFV,EACO,wBACDG,GAGD,cAAC,EAAD,CAAUrB,aAAcA,EAAcC,KAAMF","file":"static/js/7.5e4a2c1c.chunk.js","sourcesContent":["import Linkify from 'react-linkify';\nimport './AllDeals.css'\n\n\nconst AllDeals = ({tableHeaders, data}) => {\n\n   const columnClass = (key, val) => {\n    if(key.includes('Address')){\n      return 'address';\n    }\n\n    if(!isNaN(val) && !key.includes('zipCode')){\n      return 'number';\n    }\n   }\n\n\n   const renderRowData = (deal, index) => {\n    return tableHeaders.map((key) => <td key={`${key}${index}`} className={columnClass(key, deal[key])}><Linkify properties={{target: '_blank'}}>{ deal[key] }</Linkify></td>)\n   }\n\n   const renderTableData = (deals)=>{\n    return deals.map((deal, index) => {\n      return <tr key={index}>{renderRowData(deal, index)}</tr>\n      })\n    }\n\n\n    return (\n            <table>\n              <thead>\n                <tr>{tableHeaders.map((h, i) => <th key={i}>{h}</th>)}</tr>\n              </thead>\n              <tbody>\n                { renderTableData(data) }\n              </tbody>\n            </table>\n    )\n}\n\nexport default AllDeals;","import React, { useState, useEffect } from 'react';\nimport dealService from '../../services/dealService.js';\nimport AllDeals from './AllDeals'\n\nconst AllDealsContainer = () => {\n  const [isLoading, setLoading] = useState(true)\n  const [deals, setDeals] = useState([])\n  const [error, setError] = useState()\n  const [tableHeaders, setTableHeaders] = useState([])\n\n   useEffect(() => {\n         dealService.getDeals().then(({data}) =>{\n          const { deals, tableHeaders} = data;\n          setLoading(false)\n          setDeals(deals);\n          setTableHeaders(tableHeaders)\n         }, (error) => {\n          setLoading(false)\n          setError(error.toString())\n         })\n     }, [])\n\n   if(isLoading){\n      return 'AllDeals - loading...'\n   }else if(error){\n      return error\n   }else{\n    return <AllDeals tableHeaders={tableHeaders} data={deals}/>\n  }\n }\n\n export default AllDealsContainer;"],"sourceRoot":""}